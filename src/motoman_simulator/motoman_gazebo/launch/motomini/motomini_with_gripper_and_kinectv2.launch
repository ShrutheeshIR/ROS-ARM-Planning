<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="model" default="$(find motoman_description)/robots/motomini/motomini_with_gripper_kinectv2.urdf.xacro"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="use_rviz" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find motoman_gazebo)/worlds/motomini/motomini_with_kinectv2.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
		 command="$(find xacro)/xacro --inorder '$(arg model)'" />
  
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		args="-urdf -model motomini -param robot_description"/>

  <!-- ros_control motoman launch file -->
  <include file="$(find motoman_control)/launch/motomini/motomini_sim_control.launch" />

  <group if="$(arg use_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find motoman_description)/launch/motomini/rviz/motomini_with_kinectv2.rviz" required="true" />
  </group>
</launch>
